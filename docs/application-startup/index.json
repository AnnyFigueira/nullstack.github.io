{"instances": {"application":{},"n-0-0-0-0":{"expanded":false,"locale":"en-US","i18n":{"home":{"title":"Nullstack","href":"/"},"links":[{"title":"Documentation","href":"/getting-started"},{"title":"Components","href":"/components"},{"title":"Contributors","href":"/contributors"},{"title":"Waifu","href":"/waifu"}],"action":{"title":"Get Started","href":"/getting-started"},"language":{"title":"PortuguÃªs","href":"/pt-br"},"mode":{"dark":"Night Mode","light":"Day Mode"}}},"n-0-0-0-12/application-startup":{"title":"Application Startup","html":"<p>The <strong>server.js<\/strong>/<strong>client.js<\/strong> files at your application root are responsible for starting your application.<\/p>\n<p>When you run the application with <code>npm start<\/code> the <code>Nullstack.start<\/code> method in both files will start your main component and return the <a href=\"/context\"><code>context<\/code><\/a> object of their respectives environments.<\/p>\n<p>The returned <code>context<\/code> could be used normally, and you can set it's <code>start<\/code> method which runs only once, being a good place for setting things up, as your database:<\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\/span> Nullstack <span class=\"token keyword\">from<\/span> <span class=\"token string\">'nullstack'<\/span><span class=\"token punctuation\">;<\/span>\n<span class=\"token keyword\">import<\/span> Application <span class=\"token keyword\">from<\/span> <span class=\"token string\">'./src/Application'<\/span><span class=\"token punctuation\">;<\/span>\n<span class=\"token keyword\">import<\/span> startDatabase <span class=\"token keyword\">from<\/span> <span class=\"token string\">'./database'<\/span><span class=\"token punctuation\">;<\/span>\n\n<span class=\"token keyword\">const<\/span> context <span class=\"token operator\">=<\/span> Nullstack<span class=\"token punctuation\">.<\/span><span class=\"token function\">start<\/span><span class=\"token punctuation\">(<\/span>Application<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\n\ncontext<span class=\"token punctuation\">.<\/span><span class=\"token function-variable function\">start<\/span> <span class=\"token operator\">=<\/span> <span class=\"token keyword\">async<\/span> <span class=\"token keyword\">function<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\n  context<span class=\"token punctuation\">.<\/span>database <span class=\"token operator\">=<\/span> <span class=\"token keyword\">await<\/span> <span class=\"token function\">startDatabase<\/span><span class=\"token punctuation\">(<\/span>context<span class=\"token punctuation\">.<\/span>secrets<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\n<span class=\"token punctuation\">}<\/span>\n\n<span class=\"token keyword\">export<\/span> <span class=\"token keyword\">default<\/span> context<span class=\"token punctuation\">;<\/span>\n<\/code><\/pre>\n<blockquote>\n<p>ðŸ’¡ The <code>context.start<\/code> in <strong>server.js<\/strong> runs when the application is booted, and on <strong>client.js<\/strong> once the browser loads it<\/p>\n<\/blockquote>\n<p>The <code>context<\/code> can be updated in any way as long as it be exported on both files, when building the app Nullstack turns it into a serverless function out-of-box.<\/p>\n<h2 id=\"dependency-startup-pattern\"><a href=\"#dependency-startup-pattern\">Dependency startup pattern<\/a><\/h2><p>A nice pattern to work with dependencies that require startup time configurations is to define a <code>start<\/code> function in the dependency:<\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\/span> Nullstack <span class=\"token keyword\">from<\/span> <span class=\"token string\">'nullstack'<\/span><span class=\"token punctuation\">;<\/span>\n\n<span class=\"token keyword\">class<\/span> <span class=\"token class-name\">Dependency<\/span> <span class=\"token keyword\">extends<\/span> <span class=\"token class-name\">Nullstack<\/span> <span class=\"token punctuation\">{<\/span>\n\n  <span class=\"token keyword\">static<\/span> <span class=\"token keyword\">async<\/span> <span class=\"token function\">start<\/span><span class=\"token punctuation\">(<\/span><span class=\"token parameter\">context<\/span><span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\n    <span class=\"token comment\">// start something with context<\/span>\n  <span class=\"token punctuation\">}<\/span>\n\n<span class=\"token punctuation\">}<\/span>\n\n<span class=\"token keyword\">export<\/span> <span class=\"token keyword\">default<\/span> Dependency<span class=\"token punctuation\">;<\/span>\n<\/code><\/pre>\n<p>And call it in the <code>context.start<\/code> passing the <a href=\"/context\">context<\/a>:<\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\/span> Nullstack <span class=\"token keyword\">from<\/span> <span class=\"token string\">'nullstack'<\/span><span class=\"token punctuation\">;<\/span>\n<span class=\"token keyword\">import<\/span> Application <span class=\"token keyword\">from<\/span> <span class=\"token string\">'./src/Application'<\/span><span class=\"token punctuation\">;<\/span>\n<span class=\"token keyword\">import<\/span> Dependency <span class=\"token keyword\">from<\/span> <span class=\"token string\">'./src/Dependency'<\/span><span class=\"token punctuation\">;<\/span>\n\n<span class=\"token keyword\">const<\/span> context <span class=\"token operator\">=<\/span> Nullstack<span class=\"token punctuation\">.<\/span><span class=\"token function\">start<\/span><span class=\"token punctuation\">(<\/span>Application<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\n\ncontext<span class=\"token punctuation\">.<\/span><span class=\"token function-variable function\">start<\/span> <span class=\"token operator\">=<\/span> <span class=\"token keyword\">async<\/span> <span class=\"token keyword\">function<\/span><span class=\"token punctuation\">(<\/span><span class=\"token punctuation\">)<\/span> <span class=\"token punctuation\">{<\/span>\n  <span class=\"token keyword\">await<\/span> Dependency<span class=\"token punctuation\">.<\/span><span class=\"token function\">start<\/span><span class=\"token punctuation\">(<\/span>context<span class=\"token punctuation\">)<\/span><span class=\"token punctuation\">;<\/span>\n<span class=\"token punctuation\">}<\/span>\n\n<span class=\"token keyword\">export<\/span> <span class=\"token keyword\">default<\/span> Application<span class=\"token punctuation\">;<\/span>\n<\/code><\/pre>\n<blockquote>\n<p>ðŸ”’ Server functions with the name starting with &quot;start&quot; (and optionally followed by an uppercase letter) do not generate an API endpoint to avoid malicious context flooding.<\/p>\n<\/blockquote>\n<h2 id=\"next-step\"><a href=\"#next-step\">Next step<\/a><\/h2><p>âš” Learn about <a href=\"/functional-components\">functional components<\/a>.<\/p>\n","description":"The start function will run only once when your application loads and is a good place for setting up your context","topics":[{"title":"Core concepts","links":[{"title":"Getting started","href":"/getting-started"},{"title":"Renderable components","href":"/renderable-components"},{"title":"Stateful components","href":"/stateful-components"},{"title":"Full-stack lifecycle","href":"/full-stack-lifecycle"},{"title":"Server functions","href":"/server-functions"},{"title":"Context","href":"/context"},{"title":"Routes and params","href":"/routes-and-params"},{"title":"Two-way bindings","href":"/two-way-bindings"}]},{"title":"Advanced concepts","links":[{"title":"Application Startup","href":"/application-startup"},{"title":"Functional Components","href":"/functional-components"},{"title":"Persistent Components","href":"/persistent-components"},{"title":"Context data","href":"/context-data"},{"title":"Context instances","href":"/context-instances"},{"title":"Context environment","href":"/context-environment"},{"title":"Context page","href":"/context-page"},{"title":"Context project","href":"/context-project"},{"title":"Context settings","href":"/context-settings"},{"title":"Context secrets","href":"/context-secrets"},{"title":"Instance self","href":"/instance-self"},{"title":"Server request and response","href":"/server-request-and-response"},{"title":"Styles","href":"/styles"},{"title":"NJS file extension","href":"/njs-file-extension"},{"title":"Service Worker","href":"/service-worker"},{"title":"How to deploy","href":"/how-to-deploy-a-nullstack-application"}]},{"title":"Build Modes","links":[{"title":"Server-side rendering","href":"/server-side-rendering"},{"title":"Static site generation","href":"/static-site-generation"},{"title":"Single page applications","href":"/single-page-applications"}]},{"title":"Examples","links":[{"title":"How to use MongoDB","href":"/how-to-use-mongodb-with-nullstack"},{"title":"How to use Google Analytics","href":"/how-to-use-google-analytics-with-nullstack"},{"title":"How to use Facebook Pixel","href":"/how-to-use-facebook-pixel-with-nullstack"}]}]},"n-0-0-0-13":{},"n-0-0-0-15":{},"n-0-0-0-16":{"locale":"en-US","i18n":{"links":[{"title":"YouTube","href":"https://www.youtube.com/channel/UCUNPaxoppH3lu6JTrUX78Ww"},{"title":"Twitter","href":"https://twitter.com/nullstackapp"},{"title":"GitHub","href":"https://github.com/nullstack"}],"star":{"story":"Want to show your love and help us spread the word?","action":"Leave a star on GitHub"}}}}, "page": {"image":"/image-1200x630.png","status":200,"title":"Application Startup - Nullstack","description":"The start function will run only once when your application loads and is a good place for setting up your context"}}