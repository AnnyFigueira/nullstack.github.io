{"instances": {"n-0":{},"n-0-0-0":{"expanded":false,"locale":"pt-BR","i18n":{"home":{"title":"Nullstack","href":"/pt-br"},"links":[{"title":"Documenta√ß√£o","href":"/pt-br/documentacao"},{"title":"Componentes","href":"/pt-br/componentes"},{"title":"Contribuidores","href":"/pt-br/contribuidores"},{"title":"Fonte","href":"https://github.com/nullstack/nullstack","target":"_blank"},{"title":"English","href":"/"}],"action":{"title":"Come√ßar","href":"/pt-br/comecando"},"mode":{"dark":"Modo Noite","light":"Modo Dia"}}},"n-0-0-0-0-0-0-0-0":{},"n-0-0-0-0-0-0-1-0":{},"n-0-0-11":{"title":"Context Service Worker","html":"<p>O <em>worker</em> √© um proxy na parte do framework no contexto e da controle granular do comportamento do seu PWA</p>\n<p>Essa chave √© <em>readwrite</em> no contexto do <em>servidor</em></p>\n<p>Essa chave √© <em>readonly</em> no contexto do <em>cliente</em>.</p>\n<p>As chave do worker ser√£o usadas para gerar o arquivo do service worker e devem ser setadas durante o <a href=\"/pt-br/inicializacao-da-aplicacao\">processo de inicializa√ß√£o</a>.</p>\n<p>As chave do worker s√£o congeladas ap√≥s o <a href=\"/pt-br/inicializacao-da-aplicacao\">processo de inicializa√ß√£o</a>.</p>\n<p>As seguintes keys est√£o dispon√≠veis no objeto durante a inicializa√ß√£o:</p>\n<ul>\n<li><em>enabled</em>: boolean</li>\n<li><em>preload</em>: string array (relative paths)</li>\n<li><em>headers</em>: object</li>\n</ul>\n<p>A chave <em>enabled</em> define se o service worker ser√° registrado automaticamente pelo Nullstack.</p>\n<p>Por padr√£o a key <em>enabled</em> √© setada como true no modo de produ√ß√£o e false no modo de desenvolvimento.</p>\n<p>O array <em>preload</em> √© composto por caminhos que ser√£o cacheados quando o service worker for instalado.</p>\n<p>Os assets requeridos para inicializar a aplica√ß√£o ser√£o pr√©-carregados automaticamente, e voc√™ dever√° apenas as p√°ginas extras que voc√™ quer que estejam dispon√≠veis em modo offline.</p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import</span> Nullstack <span class=\"token keyword\">from</span> <span class=\"token string\">'nullstack'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> path <span class=\"token keyword\">from</span> <span class=\"token string\">'path'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>readdirSync<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'fs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Application</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Nullstack</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>worker<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> articles <span class=\"token operator\">=</span> <span class=\"token function\">readdirSync</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'..'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'articles'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    worker<span class=\"token punctuation\">.</span>preload <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token operator\">...</span>articles<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">article</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'/'</span> <span class=\"token operator\">+</span> article<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.md'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'/nullstack.svg'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'/documentation'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'/components'</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token comment\">// ...</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Application<span class=\"token punctuation\">;</span>\n</code></pre>\n<blockquote>\n<p>üí° O exemplo acima foi extraido deste reposit√≥rio e permite que a documenta√ß√£o esteja totalmente acess√≠vel em modo offline.</p>\n</blockquote>\n<p>As seguintes chaves est√£o dispon√≠veis como <em>readonly</em> no contexto do cliente:</p>\n<ul>\n<li><em>enabled</em>: boolean</li>\n<li><em>preload</em>: string array (relative paths)</li>\n<li><em>online</em>: boolean</li>\n<li><em>fetching</em>: boolean</li>\n<li><em>responsive</em>: boolean</li>\n<li><em>installation</em>: BeforeInstallPromptEvent</li>\n<li><em>registration</em>: ServiceWorkerRegistration</li>\n<li><em>loading</em>: object</li>\n</ul>\n<p>As seguintes chaves est√£o dispon√≠veis como <em>readwrite</em> no contexto do cliente:</p>\n<ul>\n<li><em>headers</em>: object</li>\n</ul>\n<p>A chave <em>responsive</em> determina se a aplica√ß√£o tem todas as respostas necess√°rias para renderizar a p√°gina atual.</p>\n<p>O Nullstack ir√° tentar manter sua aplica√ß√£o respondendo o maior tempo poss√≠vel e ir√° setar a chave para false somente quando n√£o houver mais alternativas de recuperar qualquer resposta da rede ou offline usando a estrat√©gia de busca para o <a href=\"/pt-br/contexto-environment\">ambiente</a>.</p>\n<p>A chave <em>online</em> ir√° monitorar os eventos da rede e re-renderizar a aplica√ß√£o quando o valor de navigator.onLine mudar.</p>\n<p>Quando a aplica√ß√£o voltar a ficar online o Nullstack ir√° tentar fazer a aplica√ß√£o responder novamente e re-renderizar se necess√°rio.</p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import</span> Nullstack <span class=\"token keyword\">from</span> <span class=\"token string\">'nullstack'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Application</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Nullstack</span> <span class=\"token punctuation\">{</span>\n \n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>worker<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>worker<span class=\"token punctuation\">.</span>responsive<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">OfflineWarning</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>main</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Home</span></span> <span class=\"token attr-name\">route</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>main</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Voc√™ pode acessar a <em>registration</em> e <em>installation</em> do service worker atual pela chave worker para controlar o fluxo do seu PWA.</p>\n<p>A chave <em>registration</em> se refere ao registro do service worker e s√≥ estar√° dispon√≠vel uma vez que o processo de registro esteja completo.</p>\n<p>A chave <em>installation</em> se refere a instala√ß√£o delegada no evento do prompt e apenas estar√° dispon√≠vel se o evento <em>beforeinstallprompt</em> ocorrer.</p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import</span> Nullstack <span class=\"token keyword\">from</span> <span class=\"token string\">'nullstack'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PWAInstaller</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Nullstack</span> <span class=\"token punctuation\">{</span>\n\n  installed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  hidden <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>worker<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      worker<span class=\"token punctuation\">.</span>installation<span class=\"token punctuation\">.</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>outcome<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> worker<span class=\"token punctuation\">.</span>installation<span class=\"token punctuation\">.</span>userChoice<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>outcome <span class=\"token operator\">===</span> <span class=\"token string\">'accepted'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'User accepted the A2HS prompt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'User dismissed the A2HS prompt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hidden <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>worker<span class=\"token punctuation\">,</span> project<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hidden<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>worker<span class=\"token punctuation\">.</span>installation<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>project<span class=\"token punctuation\">.</span>favicon<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span> Do you want to add <span class=\"token punctuation\">{</span>project<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span> to your home screen<span class=\"token operator\">?</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onclick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>prompt<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span> Install <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onclick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>hidden<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span> Not Now <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> PWAInstaller<span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"carregando-telas\"><a href=\"#carregando-telas\">Carregando telas</a></h2><p>Quando uma <a href=\"/pt-br/funcoes-de-servidor\">fun√ß√£o do servidor</a> √© chamada o <em>fetching</em> ser√° setado como true at√© a requisi√ß√£o ser resolvida.</p>\n<p>Quando uma <a href=\"/pt-br/funcoes-de-servidor\">fun√ß√£o do servidor</a> √© chamada a key com o nome da <a href=\"/pt-br/funcoes-de-servidor\">fun√ß√£o do servidor</a>\ninvocada ser√° setada como true na chave <em>loading</em> at√© a requisi√ß√£o for resolvida.</p>\n<p>Qualquer chave que for chamada no objeto <em>loading</em> sempre ir√° retornar um valor booleano ao inv√©s de undefined por consist√™ncia.</p>\n<p>Quando o servidor estiver emulando o contexto do cliente para <a href=\"/pt-br/renderizando-no-servidor\">renderiza√ß√£o no lado do servidor</a>, todas as chaves de <em>loading</em> v√£o sempre retornar falso, pulando multiplos ciclos de render por performance.</p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import</span> Nullstack <span class=\"token keyword\">from</span> <span class=\"token string\">'nullstack'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Page</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Nullstack</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n \n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>worker<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">onsubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span> \n        <span class=\"token punctuation\">{</span>worker<span class=\"token punctuation\">.</span>fetching <span class=\"token operator\">&amp;&amp;</span> \n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span> loading<span class=\"token operator\">...</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">disabled</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>worker<span class=\"token punctuation\">.</span>loading<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span> \n          Save\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Page<span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"headers-customizadas\"><a href=\"#headers-customizadas\">Headers customizadas</a></h2><p>Voc√™ pode usar a chave <em>headers</em> para configurar as headers que o <em>worker</em> usar√° na requisi√ß√£o para uma fun√ß√£o do servidor</p>\n<blockquote>\n<p>üî• headers ser√£o ignorados quando uma fun√ß√£o do servidor for chamada durante o processo de <a href=\"/pt-br/renderizando-no-servidor\">renderiza√ß√£o do lado do servidor</a></p>\n</blockquote>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import</span> Nullstack <span class=\"token keyword\">from</span> <span class=\"token string\">'nullstack'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LoginPage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Nullstack</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>worker<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">[</span><span class=\"token string\">'Authorization'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bearer </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>token<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token function\">authorize</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>request<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> authorization <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">[</span><span class=\"token string\">'Authorization'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token comment\">// ...</span>\n\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> LoginPage<span class=\"token punctuation\">;</span>\n</code></pre>\n<blockquote>\n<p>‚ú® Aprenda mais sobre o <a href=\"/pt-br/requisicao-e-resposta-do-servidor\">requisi√ß√µes e respostas do servidor</a></p>\n</blockquote>\n<h2 id=\"estrat-gia-de-renderiza--o-server-side\"><a href=\"#estrat-gia-de-renderiza--o-server-side\">Estrat√©gia de renderiza√ß√£o Server-side</a></h2><ul>\n<li>Requisi√ß√µes de diferentes origens ser√£o realizadas normalmente;</li>\n<li>Requisi√ß√µes diferentes do m√©todo GET ser√£o realizadas normalmente;</li>\n<li>Assets com Fingerprints ser√£o carregados no cache no momento da instala√ß√£o;</li>\n<li>Assets com Fingerprints ser√£o carregados do cache primeiro, e s√≥ ent√£o retornados para a rede, se necess√°rio;</li>\n<li>Caminhos com uma extens√£o ser√£o recuperaados e atualizar√£o o cache em segundo plano para uma requisi√ß√£o subsequente;</li>\n<li>Os caminhos navegados ser√£o carregados da rede e se falhar ser√£o retornados do cache para a p√°gina na qual o <em>worker.responsive</em> e o <em>worker.online</em> estiverem setados como false;</li>\n</ul>\n<h2 id=\"estrat-gia-de-gera--o-de-site-est-tico\"><a href=\"#estrat-gia-de-gera--o-de-site-est-tico\">Estrat√©gia de gera√ß√£o de site est√°tico</a></h2><ul>\n<li>Requisi√ß√µes de diferentes origens ser√£o realizadas normalmente;</li>\n<li>Requisi√ß√µes diferentes do m√©todo GET ser√£o realizadas normalmente;</li>\n<li>Assets com Fingerprints ser√£o carregados no cache no momento da instala√ß√£o;</li>\n<li>Assets com Fingerprints ser√£o carregados do cache primeiro, e s√≥ ent√£o retornados para a rede, se necess√°rio;</li>\n<li>Caminhos com uma extens√£o ser√£o recuperaados e atualizar√£o o cache em segundo plano para uma requisi√ß√£o subsequente;</li>\n<li>A p√°gina inicial ser√° carregada na rede primeiro, e se necess√°rio ser√° retornada uma c√≥pia em cache;</li>\n<li>Caminhos navegados ir√£o carregar apenas os dados da API est√°tica e mesclar com o template da aplica√ß√£o para gerar a resposta.</li>\n<li>Navegar para uma rota est√°tica ir√° fazer cache apenas dos dados daquela p√°gina;</li>\n<li>Quando os dados estiverem indispon√≠veis no cache ou na rede ir√° retornar uma p√°gina na qual <em>worker.responsive</em> e <em>worker.online</em> estiverem setados como false;</li>\n</ul>\n<h2 id=\"estrat-gia-customizada\"><a href=\"#estrat-gia-customizada\">Estrat√©gia customizada</a></h2><p>O Nullstack ir√° instalar automaticamente seu service worker se <em>enabled</em> estiver setado como true com os seguintes eventos:</p>\n<ul>\n<li>install</li>\n<li>activate</li>\n<li>fetch</li>\n</ul>\n<p>Voc√™ pode sobreescrever qualquer um desses eventos criando um <em>service-worker.js</em> na pasta public;</p>\n<p>Se qualquer uma das palavras chaves acima for encontrada o Nullstack ira injetar sua fun√ß√£o no c√≥digo do service worker ao inv√©s do padr√£o.</p>\n<p>Por convini√™ncia uma chave chamada <em>context</em> √© injetada no <em>self</em> do service worker com as seguintes chaves:</p>\n<ul>\n<li>worker</li>\n<li><a href=\"/pt-br/contexto-project\">project</a></li>\n<li><a href=\"/pt-br/contexto-environment\">environment</a></li>\n</ul>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">activate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">waitUntil</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> cacheNames <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> cachesToDelete <span class=\"token operator\">=</span> cacheNames<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cacheName</span> <span class=\"token operator\">=></span> cacheName <span class=\"token operator\">!==</span> self<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>environment<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>cachesToDelete<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cacheName</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> caches<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>cacheName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>registration<span class=\"token punctuation\">.</span>navigationPreload<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">await</span> self<span class=\"token punctuation\">.</span>registration<span class=\"token punctuation\">.</span>navigationPreload<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    self<span class=\"token punctuation\">.</span>clients<span class=\"token punctuation\">.</span><span class=\"token function\">claim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nself<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'activate'</span><span class=\"token punctuation\">,</span> activate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<blockquote>\n<p>üí° O exemplo acima foi extraido do service worker gerado e usa self.context.enviroment.key</p>\n</blockquote>\n<h2 id=\"pr-ximo-passo\"><a href=\"#pr-ximo-passo\">Pr√≥ximo passo</a></h2><p>‚öî Aprenda <a href=\"/pt-br/como-fazer-deploy-de-aplicacao-nullstack\">Como fazer o deploy de uma aplica√ß√£o Nullstack</a>.</p>\n","description":"The worker is a proxy in the framework store part of your context and gives you granular control of your PWA behavior."},"n-0-0-13":{},"n-0-0-15":{},"n-0-0-16":{"locale":"pt-BR","i18n":{"nullachan":{"alt":"Nulla-Chan","title":"Nulla-Chan: Waifu oficial do Nullstack"},"links":[{"title":"YouTube","href":"https://www.youtube.com/channel/UCUNPaxoppH3lu6JTrUX78Ww"},{"title":"Twitter","href":"https://twitter.com/nullstackapp"},{"title":"GitHub","href":"https://github.com/nullstack"}]}}}, "page": {"image":"/image-1200x630.png","status":200,"title":"Context Service Worker - Nullstack","description":"The worker is a proxy in the framework store part of your context and gives you granular control of your PWA behavior."}}