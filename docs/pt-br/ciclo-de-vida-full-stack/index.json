{"instances": {"n-0":{},"n-0-0-0":{"expanded":false,"locale":"pt-BR","i18n":{"home":{"title":"Nullstack","href":"/pt-br"},"links":[{"title":"Documenta√ß√£o","href":"/pt-br/documentacao"},{"title":"Componentes","href":"/pt-br/componentes"},{"title":"Contribuidores","href":"/pt-br/contribuidores"},{"title":"Fonte","href":"https://github.com/nullstack/nullstack","target":"_blank"},{"title":"English","href":"/"}],"action":{"title":"Come√ßar","href":"/pt-br/comecando"},"mode":{"dark":"Modo Noite","light":"Modo Dia"}}},"n-0-0-0-0-0-0-0-0":{},"n-0-0-0-0-0-0-1-0":{},"n-0-0-11":{"title":"Ciclo de Vida Full-Stack","html":"<p>M√©todos de ciclo de vida s√£o fun√ß√µes nomeadas de forma especial que voc√™ pode declarar na classe.</p>\n<p>Cada m√©todo de ciclo de vida roda em uma fila de ordem espec√≠fica, garantindo que todos os componentes do ciclo atual sejam preparados antes do primeiro ser iniciado.</p>\n<h2 id=\"prepare\"><a href=\"#prepare\">Prepare</a></h2><p>Esse m√©todo √© bloqueante e roda antes da primeira renderiza√ß√£o do componente.</p>\n<p>Voc√™ pode usar essa fun√ß√£o para definir o estado que o usu√°rio ver√° antes do carregamento.</p>\n<p>Se o usu√°rio estiver entrando atrav√©s dessa rota, <em>prepare</em> ir√° rodar no servidor antes do Nullstack <a href=\"/pt-br/renderizando-no-servidor\">renderizar sua aplica√ß√£o no lado do servidor</a>.</p>\n<p>Se o usu√°rio estiver navegando por outra rota, esse m√©todo rodar√° no cliente.</p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import</span> Nullstack <span class=\"token keyword\">from</span> <span class=\"token string\">'nullstack'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Component</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Nullstack</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// ...</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Component<span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"initiate\"><a href=\"#initiate\">Initiate</a></h2><p>Esse m√©todo pode ser ass√≠ncrono, e roda assim que o componente for preparado e renderizado pela primeira vez.</p>\n<p>Voc√™ pode us√°-lo para invocar outra fun√ß√£o do servidor e carregar os dados para apresentar a p√°gina.</p>\n<p>Se o usu√°rio estiver entrando atrav√©s dessa rota, <em>initiate</em> rodar√° no servidor.</p>\n<p>Nullstack ir√° esperar at√© que a promise seja resolvida e ent√£o finalmente ir√° gerar o HTML que ser√° servido.</p>\n<p>Se o usu√°rio estiver navegando por outra rota, esse m√©todo rodar√° no cliente.</p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import</span> Nullstack <span class=\"token keyword\">from</span> <span class=\"token string\">'nullstack'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Component</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Nullstack</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">initiate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>task <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getTaskByDay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      day<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>date\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// ...</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Component<span class=\"token punctuation\">;</span>\n</code></pre>\n<blockquote>\n<p>‚ú® Aprenda mais sobre <a href=\"/pt-br/funcoes-de-servidor\">fun√ß√µes do servidor</a>.</p>\n</blockquote>\n<h2 id=\"hydrate\"><a href=\"#hydrate\">Hydrate</a></h2><p>Esse m√©todo √© ass√≠ncrono e rodar√° apenas no cliente.</p>\n<p>Ele sempre rodar√° independente do ambiente que iniciou o componente.</p>\n<p>Esse √© um bom lugar para acionar depend√™ncias que manipulam o DOM ou que podem rodar apenas no lado do cliente.</p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import</span> Nullstack <span class=\"token keyword\">from</span> <span class=\"token string\">'nullstack'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Component</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Nullstack</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">hydrate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timer <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// ...</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Component<span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"update\"><a href=\"#update\">Update</a></h2><p>Esse m√©todo √© ass√≠ncrono e rodar√° apenas no cliente.</p>\n<p>Ele roda em todos os componentes sempre que o estado da aplica√ß√£o mudar.</p>\n<blockquote>\n<p>üî• Tome cuidado para n√£o causar loops infinitos quando mutacionar o estado dentro de <em>update</em>.</p>\n</blockquote>\n<p>Ele ir√° rodar logo antes da renderiza√ß√£o, mas n√£o ir√° bloquear a fila.</p>\n<p>A fun√ß√£o <em>update</em> n√£o rodar√° at√© que a aplica√ß√£o seja renderizada ap√≥s <em>initiate</em>.</p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import</span> Nullstack <span class=\"token keyword\">from</span> <span class=\"token string\">'nullstack'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Component</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Nullstack</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> today <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>today<span class=\"token punctuation\">.</span><span class=\"token function\">getDay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getDay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>date <span class=\"token operator\">=</span> today<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">initiate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// ...</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Component<span class=\"token punctuation\">;</span>\n</code></pre>\n<blockquote>\n<p>‚ú® M√©todos de ciclo de vida n√£o t√™m efeitos colaterais, voc√™ pode cham√°-los manualmentes sem causar problemas.</p>\n</blockquote>\n<h2 id=\"terminate\"><a href=\"#terminate\">Terminate</a></h2><p>Esse m√©todo √© ass√≠ncrono e rodar√° apenas no cliente.</p>\n<p>Ele ir√° rodar ap√≥s o componente deixar o DOM.</p>\n<p>Esse √© o lugar para limpar qualquer coisa que voc√™ definiu no m√©todo <em>hydrate</em>.</p>\n<p>Essa inst√¢ncia ser√° levada pelo garbage collector ap√≥s a resolu√ß√£o da promise.</p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import</span> Nullstack <span class=\"token keyword\">from</span> <span class=\"token string\">'nullstack'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Component</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Nullstack</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// ...</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">terminate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// ...</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Component<span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"pr-ximos-passos\"><a href=\"#pr-ximos-passos\">Pr√≥ximos passos</a></h2><p>‚öî Aprenda sobre <a href=\"/pt-br/funcoes-de-servidor\">fun√ß√µes do servidor</a>.</p>\n","description":"M√©todos de ciclo de vida s√£o fun√ß√µes nomeadas de forma especial que voc√™ pode declarar na classe"},"n-0-0-13":{},"n-0-0-15":{},"n-0-0-16":{"locale":"pt-BR","i18n":{"nullachan":{"alt":"Nulla-Chan","title":"Nulla-Chan: Waifu oficial do Nullstack"},"links":[{"title":"YouTube","href":"https://www.youtube.com/channel/UCUNPaxoppH3lu6JTrUX78Ww"},{"title":"Twitter","href":"https://twitter.com/nullstackapp"},{"title":"GitHub","href":"https://github.com/nullstack"}]}}}, "page": {"image":"/image-1200x630.png","status":200,"title":"Ciclo de Vida Full-Stack - Nullstack","description":"M√©todos de ciclo de vida s√£o fun√ß√µes nomeadas de forma especial que voc√™ pode declarar na classe"}}